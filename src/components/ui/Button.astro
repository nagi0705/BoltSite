---
import type { ButtonProps } from '../../types';

interface Props extends ButtonProps {
  children: any;
}

const {
  variant = 'primary',
  size = 'md',
  href,
  onClick,
  disabled = false,
  className = '',
  id,
  children,
  ...rest
} = Astro.props;

// サイズ別のクラス
const sizeClasses = {
  sm: 'px-4 py-2 text-sm',
  md: 'px-6 py-3 text-base',
  lg: 'px-8 py-4 text-lg'
};

// バリアント別のクラス
const variantClasses = {
  primary: 'bg-primary-500 hover:bg-primary-600 text-white shadow-lg hover:shadow-xl',
  secondary: 'border-2 border-primary-500 text-primary-500 hover:bg-primary-500 hover:text-white',
  tertiary: 'bg-secondary-500 hover:bg-secondary-600 text-white'
};

const baseClasses = 'inline-flex items-center justify-center font-semibold rounded-full transition-all duration-300 transform hover:scale-105 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2';
const disabledClasses = 'opacity-50 cursor-not-allowed hover:scale-100';

const classes = [
  baseClasses,
  sizeClasses[size],
  variantClasses[variant],
  disabled ? disabledClasses : '',
  className
].filter(Boolean).join(' ');

const Tag = href ? 'a' : 'button';
const tagProps = href ? { href } : { onClick, disabled };
---

<Tag
  class={classes}
  id={id}
  {...tagProps}
  {...rest}
>
  {children}
</Tag>

<style>
  /* ボタンのホバー効果をカスタマイズ */
  .hover\:scale-105:hover {
    transform: scale(1.05);
  }
  
  .hover\:scale-100:hover {
    transform: scale(1);
  }
</style>